# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).

  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']
                    
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    #  Getting DNS from TASkS
  - job_name: 'caadvisor'
    dns_sd_configs:
    - names: ['tasks.cadvisor_software']
      type: A
      port: 8080
    # AWS API target discovery - check READ.ME file 
  - job_name: 'node-exporter'
    ec2_sd_configs:
    - region: eu-central-1
      access_key: 
      secret_key: 
      port: 9100
      refresh_interval: 1m
    relabel_configs:
    - source_labels:
      - '__meta_ec2_tag_Name'
      target_label: 'instance'
    - source_labels:
      - '__meta_ec2_tag_customer'
      target_label:  'customer'
    - source_labels:
      - '__meta_ec2_tag_role'
      target_label:  'role'
 
